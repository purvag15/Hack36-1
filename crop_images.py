# -*- coding: utf-8 -*-
"""Crop Images.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RdDlKvHHpxPRosZV7rLseKVdH4GF6cMs
"""

from PIL import Image, ImageOps
from pylab import *
import numpy as np

img = Image.open('pic1.jpeg')

img = img.resize((751,1000))
im = img
img=array(img)
# print(img.shape)
# print(img.size)
if(img.size>751000):
  img=img[0:1000,0:751,0:1]
# print(img.shape)
# print(img.size)
img=img.reshape((-1,751000))
pixels=img.reshape((1000,751))
plt.imshow(pixels)
plt.show()

data = Image.fromarray(pixels)
data = data.convert("L")
# print(type(data))
# data.save('testerimg41.jpg')

no_of_entries = 17

l = []
for i in range(0, no_of_entries):
  width, height = im.size
  left = 0
  right = 1000
  top = i*int(height/no_of_entries)
  bottom = int(height/no_of_entries)*(i+1)
  # print(bottom)
  im1 = im.crop((left, top, right, bottom))
  # imhk = im1.save("testcrop.jpg")
  l.append(im1)

# # To save the list of cropped images
# x="1"
# for i in l:
#   ikj=i.save(x+".jpg");
#   x=x+"1"

x="1"
for i in l:
  old_size = i.size
  # new_size = (old_size[0]/10, old_size[1]/10)
  # new_im = ImageOps.expand(i, border=old_size[0]/10, fill='white')
  # ikj = new_im.save(x+".jpg");
  # x = x+"1"

  img = i
  img_with_border = ImageOps.expand(img, border=30, fill='white')
  ikj = img_with_border.save(x+".jpg");
  x=x+"1"
  # img_with_border.save('bordered-%s' % i)
  # print(old_size)

